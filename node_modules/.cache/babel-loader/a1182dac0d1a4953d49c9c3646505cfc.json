{"ast":null,"code":"var _jsxFileName = \"/Users/hnguyen4/misc/temp/slider/src/Slider.js\";\nimport React from \"react\";\nimport './Slider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_WIDTH = 700;\nconst IMG_HEIGHT = 400;\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lastTouch = 0;\n\n    this.handleWheel = e => {\n      clearTimeout(this.wheelTimeout);\n      this.handleMovement(e.deltaX);\n      this.wheelTimeout = setTimeout(() => this.handleMovementEnd(), 100);\n    };\n\n    this.handleTouchStart = e => {\n      this.lastTouch = e.nativeEvent.touches[0].clientX;\n    };\n\n    this.handleTouchMove = e => {\n      const delta = this.lastTouch - e.nativeEvent.touches[0].clientX;\n      this.lastTouch = e.nativeEvent.touches[0].clientX;\n      this.handleMovement(delta);\n    };\n\n    this.handleTouchEnd = () => {\n      this.handleMovementEnd();\n      this.lastTouch = 0;\n    };\n\n    this.handleMovement = delta => {\n      clearTimeout(this.transitionTimeout);\n      this.setState(state => {\n        const maxLength = state.imgs.length - 1;\n        let nextMovement = state.movement + delta;\n\n        if (nextMovement < 0) {\n          nextMovement = 0;\n        }\n\n        if (nextMovement > maxLength * IMG_WIDTH) {\n          nextMovement = maxLength * IMG_WIDTH;\n        }\n\n        return {\n          movement: nextMovement,\n          transitionDuration: \"0s\"\n        };\n      });\n    };\n\n    this.handleMovementEnd = () => {\n      const {\n        movement,\n        currentIndex\n      } = this.state;\n      const endPosition = movement / IMG_WIDTH;\n      const endPartial = endPosition % 1;\n      const endingIndex = endPosition - endPartial;\n      const deltaInteger = endingIndex - currentIndex;\n      let nextIndex = endingIndex;\n\n      if (deltaInteger >= 0) {\n        if (endPartial >= 0.1) {\n          nextIndex += 1;\n        }\n      } else if (deltaInteger < 0) {\n        nextIndex = currentIndex - Math.abs(deltaInteger);\n\n        if (endPartial > 0.9) {\n          nextIndex += 1;\n        }\n      }\n\n      this.transitionTo(nextIndex, Math.min(0.5, 1 - Math.abs(endPartial)));\n    };\n\n    this.transitionTo = (index, duration) => {\n      this.setState({\n        currentIndex: index,\n        movement: index * IMG_WIDTH,\n        transitionDuration: `${duration}s`\n      });\n      this.transitionTimeout = setTimeout(() => {\n        this.setState({\n          transitionDuration: \"0s\"\n        });\n      }, duration * 100);\n    };\n\n    this.componentWillUnmount = () => {\n      clearTimeout(this.transitionTimeout);\n    };\n\n    this.state = {\n      imgs: this.props.images,\n      currentIndex: 0,\n      movement: 0\n    };\n  }\n\n  render() {\n    const {\n      currentIndex,\n      movement,\n      transitionDuration,\n      imgs\n    } = this.state;\n    const maxLength = imgs.length - 1;\n    const maxMovement = maxLength * IMG_WIDTH;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        style: {\n          width: `${IMG_WIDTH}px`,\n          height: `${IMG_HEIGHT}px`\n        },\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleTouchEnd,\n        onWheel: this.handleWheel,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper\",\n          style: {\n            transform: `translateX(${movement * -1}px)`,\n            transitionDuration: transitionDuration\n          },\n          children: imgs.map(src => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src.url,\n              alt: \"\",\n              width: \"100%\",\n              height: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), movement !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back move\",\n          onClick: () => {\n            this.transitionTo(currentIndex - 1, 0.5);\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"middle\",\n          children: imgs[currentIndex].caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), movement !== maxMovement && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next move\",\n          onClick: () => {\n            this.transitionTo(currentIndex + 1, 0.5);\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/Users/hnguyen4/misc/temp/slider/src/Slider.js"],"names":["React","IMG_WIDTH","IMG_HEIGHT","Slider","Component","constructor","props","lastTouch","handleWheel","e","clearTimeout","wheelTimeout","handleMovement","deltaX","setTimeout","handleMovementEnd","handleTouchStart","nativeEvent","touches","clientX","handleTouchMove","delta","handleTouchEnd","transitionTimeout","setState","state","maxLength","imgs","length","nextMovement","movement","transitionDuration","currentIndex","endPosition","endPartial","endingIndex","deltaInteger","nextIndex","Math","abs","transitionTo","min","index","duration","componentWillUnmount","images","render","maxMovement","width","height","transform","map","src","url","caption"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './Slider.css';\n\nconst IMG_WIDTH = 700;\nconst IMG_HEIGHT = 400;\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgs : this.props.images,\n      currentIndex: 0,\n      movement: 0,\n    };\n  }\n  lastTouch = 0;\n  \n  handleWheel = e => {\n    clearTimeout(this.wheelTimeout);\n    this.handleMovement(e.deltaX);\n    this.wheelTimeout = setTimeout(() => this.handleMovementEnd(), 100);\n  };\n\n  handleTouchStart = e => {\n    this.lastTouch = e.nativeEvent.touches[0].clientX;\n  };\n\n  handleTouchMove = e => {\n    const delta = this.lastTouch - e.nativeEvent.touches[0].clientX;\n    this.lastTouch = e.nativeEvent.touches[0].clientX;\n\n    this.handleMovement(delta);\n  };\n\n  handleTouchEnd = () => {\n    this.handleMovementEnd();\n    this.lastTouch = 0;\n  };\n\n  handleMovement = delta => {\n    clearTimeout(this.transitionTimeout);\n  \n    this.setState(state => {\n      const maxLength = state.imgs.length - 1;\n  \n      let nextMovement = state.movement + delta;\n  \n      if (nextMovement < 0) {\n        nextMovement = 0;\n      }\n  \n      if (nextMovement > maxLength * IMG_WIDTH) {\n        nextMovement = maxLength * IMG_WIDTH;\n      }\n  \n      return {\n        movement: nextMovement,\n        transitionDuration: \"0s\",\n      };\n    });\n  };\n  \n  handleMovementEnd = () => {\n    const { movement, currentIndex } = this.state;\n  \n    const endPosition = movement / IMG_WIDTH;\n    const endPartial = endPosition % 1;\n    const endingIndex = endPosition - endPartial;\n    const deltaInteger = endingIndex - currentIndex;\n  \n    let nextIndex = endingIndex;\n\n    if (deltaInteger >= 0) {\n      if (endPartial >= 0.1) {\n        nextIndex += 1;\n      }\n    } else if (deltaInteger < 0) {\n      nextIndex = currentIndex - Math.abs(deltaInteger);\n      if (endPartial > 0.9) {\n        nextIndex += 1;\n      }\n    }\n\n    this.transitionTo(nextIndex, Math.min(0.5, 1 - Math.abs(endPartial)));\n\n  };\n\n  transitionTo = (index, duration) => {\n    this.setState({\n      currentIndex: index,\n      movement: index * IMG_WIDTH,\n      transitionDuration: `${duration}s`,\n    });\n  \n    this.transitionTimeout = setTimeout(() => {\n      this.setState({ transitionDuration: \"0s\" });\n    }, duration * 100);\n  };\n  \n  componentWillUnmount = () => {\n    clearTimeout(this.transitionTimeout);\n  };\n  \n  render() {\n    const { currentIndex, movement, transitionDuration, imgs } = this.state;\n    const maxLength = imgs.length - 1;\n    const maxMovement = maxLength * IMG_WIDTH;\n    return (\n      <div className=\"App\">\n        <div\n          className=\"main\"\n          style={{\n            width: `${IMG_WIDTH}px`,\n            height: `${IMG_HEIGHT}px`,\n          }}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          onTouchEnd={this.handleTouchEnd}\n          onWheel={this.handleWheel}\n        >\n          <div\n            className=\"swiper\"\n            style={{\n              transform: `translateX(${movement * -1}px)`,\n              transitionDuration: transitionDuration,\n            }}\n          >\n            {imgs.map(src => {\n              return( \n                <img src={src.url} alt=\"\" width=\"100%\" height=\"100%\" />\n                );\n            })}\n          </div>\n          {movement !== 0 && (\n            <button\n              className=\"back move\"\n              onClick={() => {\n                this.transitionTo(currentIndex - 1, 0.5);\n              }}\n            >\n              ←\n            </button>\n          )} {\n          <h1 className=\"middle\">\n             {imgs[currentIndex].caption}\n          </h1>\n          }\n          {movement !== maxMovement && (\n            <button\n              className=\"next move\"\n              onClick={() => {\n                this.transitionTo(currentIndex + 1, 0.5);\n              }}\n            >\n              →\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}